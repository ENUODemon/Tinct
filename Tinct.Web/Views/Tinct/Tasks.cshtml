
@{
    ViewBag.Title = "Tasks";
}

<h2>Tasks</h2>

<div class="form-inline" >
    <div style="float:right" class="form-group">
        <input type="button" class="btn btn-default" value="Search"   onclick="searchTasks(document.getElementsByName('searchContent')[0].value)" />
    </div>
    <div style="float:right" class="form-group">
        <input type="text" class="form-control" name="searchContent"/>
    </div>
    
   
</div>
<table class="table table-striped" name="tasksTable">
    <tr>
        <th>
            ID
        </th>
        <th>
            Name
        </th>
        <th onclick='tasksPage(pagesize, pageindex,currenttasks, "Context.ControllerName", this)'>
            Controller
        </th>
        <th  onclick='tasksPage(pagesize, pageindex,currenttasks, "Context.ActionName", this)' >
            Action
        </th>
        <th>
            Priority
        </th>
        <th onclick='tasksPage(pagesize, pageindex,currenttasks, "Status", this)'>
            TaskStatus
        </th>
        <th onclick='tasksPage(pagesize, pageindex,currenttasks, "CreateTime", this)'>
            CreateTime
        </th>
        <th onclick='tasksPage(pagesize, pageindex,currenttasks, "StartTime", this)'>
            ExcuteTime
        </th>
        <th onclick='tasksPage(pagesize, pageindex,currenttasks, "EndTime", this)'>
            EndTime
        </th>
    </tr>
</table>
<nav>
    <ul class="pager" style="text-align:right">
        <li>
            <input class="form-control" id="page" value="1" type="text" style="display:inline;width:4%" name="pageindex" />

        </li>
        <li>
            <a onclick="goPage()">Go</a>
        </li>
        <li><a onclick="prev()">Previous</a></li>
        <li><a onclick="next()">Next</a></li>

    </ul>
</nav>
<input type="hidden" value='@Html.Raw(ViewBag.TaskInfosLists)' name="taskInfoLists" />
<input type="hidden" value="@Html.Raw(ViewBag.PageSize)"name="pagesize" />
<script type="text/javascript">

    function formatDatetime(datestring) {

        var date = new Date(datestring);
        return date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate() + " " + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + ":" + date.getMilliseconds();
    }

    var by = function (name, sortDirection) {
        return function (a, b) {
            if (sortDirection == "asc") {
               
                if (name.indexOf('.') > 0)
                {
                    name = name.split('.');
                    return  a[name[0]][name[1]].localeCompare(b[name[0]][name[1]]);
                } 
                if (name.length > 1 && typeof name != 'string')
                {
                    return a[name[0]][name[1]].localeCompare(b[name[0]][name[1]]);
                }
                return a[name].localeCompare(b[name]);
            }
            else if (sortDirection == "desc") {

                if (name.indexOf('.') > 0) {
                    name = name.split('.');
                    return b[name[0]][name[1]].localeCompare(a[name[0]][name[1]]);
                }
                if (name.length > 1&&typeof name!='string') {
                    return b[name[0]][name[1]].localeCompare(a[name[0]][name[1]]);
                }
                return b[name].localeCompare(a[name]);
            }
        }
    }



    function goPage() {
        pageindex = document.getElementsByName("pageindex")[0].value;
        tasksPage(pagesize, pageindex, currenttasks);
    }

    function prev() {
        if (pageindex > 1) {
            pageindex--;
        }

        tasksPage(pagesize, pageindex, currenttasks);
        document.getElementsByName("pageindex")[0].value = pageindex;
    }


    function next() {
        pageindex++;
        tasksPage(pagesize, pageindex, currenttasks);
        document.getElementsByName("pageindex")[0].value = pageindex;
    }

    function searchTasks(textcontent)
    {
        if (textcontent == ""||textcontent==undefined)
        {
            return;
        }

        var temptasks = new Array();
        var i = 0;
        $.each(tasks, function (k, v) {
            if (
                v.ID.indexOf(textcontent)!=-1
                ||v.Name.indexOf(textcontent)!=-1
                ||v.Context.ControllerName.indexOf(textcontent) != -1
                || v.Context.ActionName.indexOf(textcontent) != -1)
            {
                temptasks[i++]=v;
            }
        });
        currenttasks = temptasks;
        tasksPage(pagesize, pageindex, currenttasks);

    }


    var tasks = JSON.parse(document.getElementsByName("taskInfoLists")[0].value);
    var currenttasks = tasks;
    var pageindex = 1;
    var pagesize = parseInt( document.getElementsByName("pagesize")[0].value);


    function tasksPage(pagesize, pageindex, tasks,sortName, object) {
        if (object != undefined) {
            if (object.sortDirection == undefined) {
                object.sortDirection = "asc";
            }
            else if (object.sortDirection == "asc") {
                object.sortDirection = "desc";
            }
            else if (object.sortDirection == "desc") {
                object.sortDirection = "asc";
            }

            tasks = tasks.sort(by(sortName, object.sortDirection))
        }

        var pagetasks = tasks.slice(pagesize * (pageindex - 1), pagesize * pageindex);

        $(document.getElementsByName("taskinfo")).remove();
        var table = document.getElementsByName("tasksTable")[0];



        $.each(pagetasks, function f(k, v) {

            var ele = $('<tr name="taskinfo"></tr>');
            ele.append('<td>' + v.ID + '</td>');
            ele.append('<td>' + v.Name + '</td>');
            ele.append('<td>' + v.Context.ControllerName + '</td>');
            ele.append('<td>' + v.Context.ActionName + '</td>');
            ele.append('<td>' + v.Priority + '</td>');
            ele.append('<td>' + v.Status + '</td>');
            ele.append('<td>' + formatDatetime(v.CreateTime) + '</td>');
            ele.append('<td>' + formatDatetime(v.StartTime) + '</td>');
            ele.append('<td>' + formatDatetime(v.EndTime) + '</td>');
            $(table).append(ele);
        });


    }
    tasksPage(pagesize, pageindex, currenttasks);
</script>


